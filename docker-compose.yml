version: "3"

services:
  db:
    image: mariadb
    container_name: db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    volumes:
      - ./db:/var/lib/mysql
      - ./etc/mysql/conf.d:/etc/mysql/conf.d
    networks:
      - proxy-tier

  proxy:
    build:
      context: .
      dockerfile: proxy.dockerfile
    container_name: ${PROXY}
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./proxy/conf.d:/etc/nginx/conf.d
      - ./proxy/certs:/etc/nginx/certs:ro
      - ./proxy/html:/usr/share/nginx/html
      - ./proxy/htpasswd:/etc/nginx/htpasswd:ro
      - ./proxy/vhost.d:/etc/nginx/vhost.d
    networks:
      - proxy-tier

  proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: ${LETS_ENCRYPT}
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./proxy/certs:/etc/nginx/certs:rw
      - ./proxy/conf.d:/etc/nginx/conf.d
      - ./proxy/html:/usr/share/nginx/html
      - ./proxy/htpasswd:/etc/nginx/htpasswd:ro
      - ./proxy/vhost.d:/etc/nginx/vhost.d
    environment:
      NGINX_PROXY_CONTAINER: ${PROXY}

  nextcloud-app:
    image: nextcloud:fpm
    container_name: nextcloud-app
    depends_on:
      - db
    volumes:
      - ./nextcloud/app:/var/www/html
    restart: unless-stopped
    networks:
      - proxy-tier

  nextcloud-web:
    build:
      context: .
      dockerfile: nextcloud.dockerfile
    container_name: nextcloud-web
    depends_on:
      - nextcloud-app
    volumes:
      - ./nextcloud/app:/var/www/html
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=${NEXTCLOUD_HOST}
      - VIRTUAL_NETWORK=${PROXY}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${NEXTCLOUD_HOST}
      - LETSENCRYPT_EMAIL=${LE_EMAIL}
    ports:
      - 8001:80
    networks:
      - proxy-tier

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - proxy-tier

  mineos:
    image: hexparrot/mineos
    container_name: mineos
    restart: unless-stopped
    volumes:
      - ./minecraft/data:/var/games/minecraft
    ports:
      - "25565:25565"
      - "25566:25566"
      - "8443:8443"
    environment:
      - VIRTUAL_HOST=${MINEOS_HOST}
      - VIRTUAL_NETWORK=${PROXY}
      - VIRTUAL_PORT=8443
      - VIRTUAL_PROTO=https
      - LETSENCRYPT_HOST=${MINEOS_HOST}
      - LETSENCRYPT_EMAIL=${LE_EMAIL}
      - USER_NAME=${MINEOS_USER}
      - USER_PASSWORD=${MINEOS_PASS}
    networks:
      - proxy-tier

  plex:
    image: plexinc/pms-docker
    container_name: plex
    hostname: PlexServer
    restart: unless-stopped
    ports:
      - 32400:32400/tcp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    environment:
      - VIRTUAL_HOST=${PLEX_HOST}
      - VIRTUAL_NETWORK=${PROXY}
      - VIRTUAL_PORT=32400
      - LETSENCRYPT_HOST=${PLEX_HOST}
      - LETSENCRYPT_EMAIL=${LE_EMAIL}
      - TZ=America/Chicago
      - ADVERTISE_IP=http://${IP}:32400/
      - PUID=${PLEX_UID}
      - PGID=${PLEX_GID}
      - VERSION=latest
    volumes:
      - ./plex/config:/config
      - ./plex/temp:/transcode
      - ./plex/data:/data
    networks:
      - proxy-tier
networks:
  proxy-tier:
    driver: bridge
